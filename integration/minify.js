#!/usr/bin/env node
const fs = require('fs');
const RENAMES = {
  lFrame: 'a',
  previousOrParentTNode: 'b',
  isParent: 'c',
  checkNoChangesMode: 'd',
  ngOnInit: 'e',
  ngDoCheck: 'f',
  afterContentInit: 'g',
  ngAfterContentInit: 'h',
  afterContentChecked: 'i',
  ngAfterContentChecked: 'j',
  afterViewInit: 'k',
  ngAfterViewInit: 'l',
  afterViewChecked: 'm',
  ngAfterViewChecked: 'n',
  onDestroy: 'o',
  ngOnDestroy: 'p',
  changeDetection: 'q',
  directiveDefs: 'r',
  pipeDefs: 's',
  features: 't',
  bindingsEnabled: 'q',
  bindingIndex: 'u',
  bindingRootIndex: 'v',
  currentDirectiveIndex: 'w',
  currentQueryIndex: 'x',
  lView: 'y',
  selectedIndex: 'z',
  contextLView: 'A',
  elementDepthCount: 'B',
  currentNamespace: 'C',
  currentSanitizer: 'D',
  bindingStartIndex: 'E',
  onChanges: 'F',
  onInit: 'G',
  doCheck: 'H',
  hostBindings: 'G',
  hostAttrs: 'I',
  hostVars: 'J',
  preOrderCheckHooks: 'K',
  preOrderHooks: 'L',
  contentCheckHooks: 'M',
  contentHooks: 'N',
  expandoInstructions: 'O',
  expandoStartIndex: 'P',
  viewCheckHooks: 'Q',
  viewHooks: 'R',
  firstUpdatePass: 'S',
  queries: 'T',
  viewQuery: 'U',
  template: 'V',
  firstCreatePass: 'W',
  staticContentQueries: 'X',
  staticViewQueries: 'Y',
  components: 'Z',
  parent: '_',
  child: '$',
  blueprint: 'aa',
  canSeeViewProviders: 'ab',
  injectImpl: 'ac',
  child: 'ad',
  canSeeViewProviders: 'ae',
  resolving: 'af',
  injectImpl: 'ag',
  contentQueries: 'ah',
  type: 'ai',
  factory: 'aj',
  directives: 'ak',
  listen: 'al',
  data: 'am',
  index: 'ao',
  injectorIndex: 'ap',
  directiveStart: 'aq',
  directiveEnd: 'ar',
  propertyBindings: 'as',
  flags: 'at',
  providerIndexes: 'au',
  tagName: 'av',
  attrs: 'ax',
  mergedAttrs: 'ay',
  localNames: 'az',
  initialInputs: 'aA',
  inputs: 'aB',
  outputs: 'aC',
  tViews: 'aD',
  projectionNext: 'aE',
  projection: 'aF',
  residualStyles: 'aG',
  classes: 'aH',
  residualClasses: 'aI',
  classBindings: 'aJ',
  styleBindings: 'aK',
  destroyHooks: 'aL',
  cleanup: 'aM',
  directiveRegistry: 'aN',
  pipeRegistry: 'aO',
  schemas: 'aP',
  consts: 'aQ',
  encapsulation: 'aR',
  providersResolver: 'aS',
  hostFeatures: 'aT',
  ngContentSelectors: 'aU',
  declaredInputs: 'aV',
  exportAs: 'aW',
  onPush: 'aX',
  next: 'aY',
  firstChild: 'aZ',
  selectors: 'ba',
  decls: 'bb',
  vars: 'bc',
  playerHandler: 'bd',
  scheduler: 'be',
  clean: 'bf',
  setInput: 'bg',
  root: 'bh',
  app: 'bi',
  dep: 'bj',
  pipes: 'bk',
  sanitizer: 'bl',
  begin: 'bm',
  end: 'bn',
  module: 'bo',
  styles: 'bp',
  tView: 'bq',
  host: 'br',
  injector: 'bs',
};
const DUPS = {
  'setAttribute': true,
  'className': true,
  'toString': true,
  'fill': true,
  'name': true,
  'map': true,
  'concat': true,
  'arguments': true,
  'createText': true,
  'createTextNode': true,
  'style': true,
  'cssText': true,
  'prototype': true,
  '__ngContext__': true,
  'slice': true,
  'function': true,
  '_classCallCheck': true,
  'if': true,
  'instanceof': true,
  'throw': true,
  'new': true,
  'TypeError': true,
  'Cannot': true,
  'call': true,
  'class': true,
  'as': true,
  'window': true,
  'webpackJsonp': true,
  'push': true,
  'exports': true,
  'zUnb': true,
  'AytR': true,
  'use': true,
  'strict': true,
  'for': true,
  'var': true,
  'in': true,
  'return': true,
  'Error': true,
  'Could': true,
  'not': true,
  'find': true,
  'renamed': true,
  'property': true,
  'on': true,
  'target': true,
  'object': true,
  'null': true,
  'undefined': true,
  'typeof': true,
  'globalThis': true,
  'self': true,
  'WorkerGlobalScope': true,
  'global': true,
  'u0275cmp': true,
  'u0275dir': true,
  'u0275pipe': true,
  'u0275fac': true,
  '__NG_ELEMENT_ID__': true,
  'OnPush': true,
  'Default': true,
  'Emulated': true,
  'Native': true,
  'None': true,
  'ShadowDom': true,
  'hasOwnProperty': Object.hasOwnProperty,
  'querySelector': true,
  'textContent': true,
  'Array': true,
  'isArray': true,
  'document': true,
  'requestAnimationFrame': true,
  'setTimeout': true,
  'bind': true,
  'MODULE_NOT_FOUND': true,
  'keys': true,
  'setAttribute': true,
  'setAttributeNS': true,
  'charCodeAt': true,
  'Promise': true,
  'resolve': true,
  'insertBefore': true,
  'appendChild': true,
  'parentNode': true,
  'indexOf': true,
  'try': true,
  'finally': true,
  'parent': true,
  'void': true,
  'length': true,
  'number': true,
  'break': true,
  'else': true,
  'this': true,
  'string': true,
  'forEach': true,
  'createRenderer': true,
};
const src = process.argv[2];
const dst = process.argv[3];
let text = fs.readFileSync(src).toString();

Object.keys(RENAMES).forEach((key) => {
  const value = RENAMES[key];
  text = text.replace(new RegExp('\\b' + key + '\\b', 'g'), value);
});
text.replace(/\b\w\w\w+\b/g, (text) => {
  if (!DUPS.hasOwnProperty(text) && Number.parseInt(text) != text) {
    console.log(text);
    DUPS[text] = true;
  }
});
fs.writeFileSync(dst, text);