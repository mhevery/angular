[
  {
    "name": "APP_ROOT"
  },
  {
    "name": "Action"
  },
  {
    "name": "AnimationFrameAction"
  },
  {
    "name": "AnonymousSubject"
  },
  {
    "name": "AppState"
  },
  {
    "name": "AsapAction"
  },
  {
    "name": "AsyncAction"
  },
  {
    "name": "AsyncScheduler"
  },
  {
    "name": "CIRCULAR$1"
  },
  {
    "name": "CLEAN_PROMISE"
  },
  {
    "name": "CommonModule"
  },
  {
    "name": "DefaultIterableDiffer"
  },
  {
    "name": "DefaultIterableDifferFactory"
  },
  {
    "name": "EMPTY$2"
  },
  {
    "name": "EMPTY_ARRAY$1"
  },
  {
    "name": "EMPTY_RENDERER_TYPE_ID"
  },
  {
    "name": "ElementRef$1"
  },
  {
    "name": "EmbeddedViewRef$1"
  },
  {
    "name": "EventEmitter"
  },
  {
    "name": "GET_PROPERTY_NAME$1"
  },
  {
    "name": "INJECTOR"
  },
  {
    "name": "Immediate"
  },
  {
    "name": "Inject"
  },
  {
    "name": "InjectionToken"
  },
  {
    "name": "IterableChangeRecord_"
  },
  {
    "name": "NG_HOST_SYMBOL"
  },
  {
    "name": "NG_PROJECT_AS_ATTR_NAME"
  },
  {
    "name": "NOT_YET"
  },
  {
    "name": "NO_CHANGE"
  },
  {
    "name": "NULL_INJECTOR$1"
  },
  {
    "name": "NgForOf"
  },
  {
    "name": "NgForOfContext"
  },
  {
    "name": "NgOnChangesFeature"
  },
  {
    "name": "NullInjector"
  },
  {
    "name": "ObjectUnsubscribedError"
  },
  {
    "name": "Observable"
  },
  {
    "name": "Optional"
  },
  {
    "name": "PARAMETERS"
  },
  {
    "name": "PRIVATE_PREFIX"
  },
  {
    "name": "QueueAction"
  },
  {
    "name": "R3Injector"
  },
  {
    "name": "RecordViewTuple"
  },
  {
    "name": "SafeSubscriber"
  },
  {
    "name": "Scheduler"
  },
  {
    "name": "Self"
  },
  {
    "name": "SimpleChange"
  },
  {
    "name": "SkipSelf"
  },
  {
    "name": "Subject"
  },
  {
    "name": "SubjectSubscriber"
  },
  {
    "name": "SubjectSubscription"
  },
  {
    "name": "Subscriber"
  },
  {
    "name": "Subscription"
  },
  {
    "name": "THROW_IF_NOT_FOUND"
  },
  {
    "name": "TemplateRef$1"
  },
  {
    "name": "ToDoAppComponent"
  },
  {
    "name": "ToDoAppModule"
  },
  {
    "name": "TodoComponent"
  },
  {
    "name": "UNDEFINED_RENDERER_TYPE_ID"
  },
  {
    "name": "USE_VALUE$1"
  },
  {
    "name": "UnsubscriptionError"
  },
  {
    "name": "ViewContainerRef$1"
  },
  {
    "name": "_CLEAN_PROMISE"
  },
  {
    "name": "_DuplicateItemRecordList"
  },
  {
    "name": "_DuplicateMap"
  },
  {
    "name": "_THROW_IF_NOT_FOUND"
  },
  {
    "name": "__extends"
  },
  {
    "name": "__extends$1"
  },
  {
    "name": "__extends$10"
  },
  {
    "name": "__extends$11"
  },
  {
    "name": "__extends$12"
  },
  {
    "name": "__extends$13"
  },
  {
    "name": "__extends$14"
  },
  {
    "name": "__extends$17"
  },
  {
    "name": "__extends$18"
  },
  {
    "name": "__extends$19"
  },
  {
    "name": "__extends$2"
  },
  {
    "name": "__extends$20"
  },
  {
    "name": "__extends$4"
  },
  {
    "name": "__extends$5"
  },
  {
    "name": "__extends$6"
  },
  {
    "name": "__global"
  },
  {
    "name": "__read"
  },
  {
    "name": "__self"
  },
  {
    "name": "__spread"
  },
  {
    "name": "__window"
  },
  {
    "name": "_c0"
  },
  {
    "name": "_c1"
  },
  {
    "name": "_currentInjector"
  },
  {
    "name": "_devMode"
  },
  {
    "name": "_enable_super_gross_mode_that_will_cause_bad_things"
  },
  {
    "name": "_getComponentHostLElementNode"
  },
  {
    "name": "_global"
  },
  {
    "name": "_renderCompCount"
  },
  {
    "name": "_symbolIterator"
  },
  {
    "name": "addDestroyable"
  },
  {
    "name": "addRemoveViewFromContainer"
  },
  {
    "name": "addToViewTree"
  },
  {
    "name": "appendChild"
  },
  {
    "name": "baseDirectiveCreate"
  },
  {
    "name": "bind"
  },
  {
    "name": "bindingUpdated"
  },
  {
    "name": "callHooks"
  },
  {
    "name": "canInsertNativeNode"
  },
  {
    "name": "checkNoChanges"
  },
  {
    "name": "checkNoChangesMode"
  },
  {
    "name": "cleanUpView"
  },
  {
    "name": "componentRefresh"
  },
  {
    "name": "config"
  },
  {
    "name": "container"
  },
  {
    "name": "containerRefreshEnd"
  },
  {
    "name": "containerRefreshStart"
  },
  {
    "name": "couldBeInjectableType"
  },
  {
    "name": "createInjector"
  },
  {
    "name": "createLNode"
  },
  {
    "name": "createLView"
  },
  {
    "name": "createTNode"
  },
  {
    "name": "createTView"
  },
  {
    "name": "currentView"
  },
  {
    "name": "deepForEach"
  },
  {
    "name": "defaultIterableDiffers"
  },
  {
    "name": "defineComponent"
  },
  {
    "name": "defineDirective"
  },
  {
    "name": "defineInjectable"
  },
  {
    "name": "defineInjector"
  },
  {
    "name": "destroyViewTree"
  },
  {
    "name": "detectChanges"
  },
  {
    "name": "detectChangesInternal"
  },
  {
    "name": "directiveCreate"
  },
  {
    "name": "domRendererFactory3"
  },
  {
    "name": "elementClassNamed"
  },
  {
    "name": "elementEnd"
  },
  {
    "name": "elementProperty"
  },
  {
    "name": "elementStart"
  },
  {
    "name": "empty"
  },
  {
    "name": "enterView"
  },
  {
    "name": "errorObject"
  },
  {
    "name": "executeHooks"
  },
  {
    "name": "executeInitAndContentHooks"
  },
  {
    "name": "executeInitHooks"
  },
  {
    "name": "executeOnDestroys"
  },
  {
    "name": "extendStatics"
  },
  {
    "name": "findFirstRNode"
  },
  {
    "name": "findMatchingLocalNames"
  },
  {
    "name": "findNextRNodeSibling"
  },
  {
    "name": "firstTemplatePass"
  },
  {
    "name": "flattenUnsubscriptionErrors"
  },
  {
    "name": "forwardRef"
  },
  {
    "name": "generateInitialInputs"
  },
  {
    "name": "generatePropertyAliases"
  },
  {
    "name": "getClosureSafeProperty$1"
  },
  {
    "name": "getDirectiveInstance"
  },
  {
    "name": "getNextLNodeWithProjection"
  },
  {
    "name": "getNextOrParentSiblingNode"
  },
  {
    "name": "getNullInjector"
  },
  {
    "name": "getOrCreateContainerRef"
  },
  {
    "name": "getOrCreateElementRef"
  },
  {
    "name": "getOrCreateNodeInjector"
  },
  {
    "name": "getOrCreateNodeInjectorForNode"
  },
  {
    "name": "getOrCreateTView"
  },
  {
    "name": "getOrCreateTemplateRef"
  },
  {
    "name": "getParentState"
  },
  {
    "name": "getPreviousIndex"
  },
  {
    "name": "getPreviousOrParentNode"
  },
  {
    "name": "getPromiseCtor"
  },
  {
    "name": "getRenderer"
  },
  {
    "name": "getRootView"
  },
  {
    "name": "getSymbolIterator"
  },
  {
    "name": "getSymbolIterator$1"
  },
  {
    "name": "getTypeNameForDebugging"
  },
  {
    "name": "getTypeNameForDebugging$1"
  },
  {
    "name": "hack_declareDirectives"
  },
  {
    "name": "hasDeps"
  },
  {
    "name": "hasOnDestroy"
  },
  {
    "name": "hostElement"
  },
  {
    "name": "hostReportError"
  },
  {
    "name": "initBindings"
  },
  {
    "name": "initChangeDetectorIfExisting"
  },
  {
    "name": "inject"
  },
  {
    "name": "injectArgs"
  },
  {
    "name": "injectTemplateRef"
  },
  {
    "name": "injectViewContainerRef"
  },
  {
    "name": "injectableDefRecord"
  },
  {
    "name": "insertChild"
  },
  {
    "name": "insertView"
  },
  {
    "name": "interpolation1"
  },
  {
    "name": "invertObject"
  },
  {
    "name": "isArray"
  },
  {
    "name": "isDevMode"
  },
  {
    "name": "isDifferent"
  },
  {
    "name": "isExistingProvider"
  },
  {
    "name": "isFactoryProvider"
  },
  {
    "name": "isFunction"
  },
  {
    "name": "isJsObject"
  },
  {
    "name": "isListLikeIterable"
  },
  {
    "name": "isObject"
  },
  {
    "name": "isProceduralRenderer"
  },
  {
    "name": "isTypeProvider"
  },
  {
    "name": "isValueProvider"
  },
  {
    "name": "iterateListLike"
  },
  {
    "name": "leaveView"
  },
  {
    "name": "locateHostElement"
  },
  {
    "name": "looseIdentical"
  },
  {
    "name": "makeMetadataCtor"
  },
  {
    "name": "makeParamDecorator"
  },
  {
    "name": "makeRecord"
  },
  {
    "name": "markDirty"
  },
  {
    "name": "markDirtyIfOnPush"
  },
  {
    "name": "markViewDirty"
  },
  {
    "name": "nextHandle"
  },
  {
    "name": "noop"
  },
  {
    "name": "notImplemented"
  },
  {
    "name": "observable"
  },
  {
    "name": "pipeFromArray"
  },
  {
    "name": "providerToRecord"
  },
  {
    "name": "queueComponentIndexForCheck"
  },
  {
    "name": "queueContentHooks"
  },
  {
    "name": "queueDestroyHooks"
  },
  {
    "name": "queueHostBindingForCheck"
  },
  {
    "name": "queueInitHooks"
  },
  {
    "name": "queueLifecycleHooks"
  },
  {
    "name": "queueViewHooks"
  },
  {
    "name": "refreshChildComponents"
  },
  {
    "name": "refreshDirectives"
  },
  {
    "name": "refreshDynamicChildren"
  },
  {
    "name": "removeListeners"
  },
  {
    "name": "removeView"
  },
  {
    "name": "renderComponent"
  },
  {
    "name": "renderComponentOrTemplate"
  },
  {
    "name": "renderEmbeddedTemplate"
  },
  {
    "name": "resetApplicationState"
  },
  {
    "name": "resolveForwardRef"
  },
  {
    "name": "resolveRendererType2"
  },
  {
    "name": "rootDirectiveIndices"
  },
  {
    "name": "runIfPresent"
  },
  {
    "name": "rxSubscriber"
  },
  {
    "name": "scheduleTick"
  },
  {
    "name": "setCurrentInjector"
  },
  {
    "name": "setHostBindings"
  },
  {
    "name": "setInputsForProperty"
  },
  {
    "name": "setInputsFromAttrs"
  },
  {
    "name": "setUpAttributes"
  },
  {
    "name": "setViewNext"
  },
  {
    "name": "stringify"
  },
  {
    "name": "stringify$1"
  },
  {
    "name": "tasksByHandle"
  },
  {
    "name": "text"
  },
  {
    "name": "textBinding"
  },
  {
    "name": "throwErrorIfNoChangesMode"
  },
  {
    "name": "tick"
  },
  {
    "name": "toSubscriber"
  },
  {
    "name": "trackByIdentity"
  },
  {
    "name": "tryCatch"
  },
  {
    "name": "tryCatcher"
  },
  {
    "name": "viewAttached"
  },
  {
    "name": "Éµ0"
  }
]